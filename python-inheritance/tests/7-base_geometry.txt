The ``7-base_geometry`` module
=============================

Using ``BaseGeometry``
---------------------

Import the class:

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

>>> bg.integer_validator("bool", True)
Traceback (most recent call last):
...
TypeError: bool must be an integer
>>> bg.integer_validator("float", 6.7)
Traceback (most recent call last):
...
TypeError: float must be an integer
>>> bg.integer_validator("complex", complex(2, 2))
Traceback (most recent call last):
...
TypeError: complex must be an integer

>>> bg.integer_validator("set", {"name", "john"})
Traceback (most recent call last):
...
TypeError: set must be an integer
>>> bg.integer_validator("frozenset", frozenset(["holberton", "school"]))
Traceback (most recent call last):
...
TypeError: frozenset must be an integer

>>> bg.integer_validator("integer", -4)
Traceback (most recent call last):
...
ValueError: integer must be greater than 0

Checking for method docstring:
>>> mod1 = __import__("7-base_geometry").BaseGeometry.area.__doc__
>>> len(mod1) > 1
True
>>> mod2 = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
>>> len(mod2) > 1
True

Checking for area failure:
>>> b = BG()
>>> b.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

Checking too many arguments for area:
>>> b.area(1)
Traceback (most recent call last):
...
TypeError: area() takes 1 positional argument but 2 were given

Checking for no arguments to integer_validator:
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Checking for only 1 argument to integer_validator:
>>> bg.integer_validator("integer")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("age", 4)

>>> bg.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: year must be an integer

>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
...
TypeError: year must be an integer

>>> bg.integer_validator("year", [2])
Traceback (most recent call last):
...
TypeError: year must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: kms must be greater than 0
